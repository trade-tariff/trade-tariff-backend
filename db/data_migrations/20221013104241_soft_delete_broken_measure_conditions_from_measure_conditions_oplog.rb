Sequel.migration do
  if TradeTariffBackend.uk?
    MEASURE_CONDITION_SIDS = [20115851,20115852,20115853,20115854,20115855,20115856,20115857,20115858,20115859,20115860,20115861,20115862,20115863,20115864,20115865,20115866,20115867,20115868,20115869,20115870,20115871,20115872,20115873,20115874,20115875,20115876,20115877,20115878,20115879,20115880,20115881,20115882,20115883,20115884,20115885,20115886,20115887,20115888,20115889,20115890,20115891,20115892,20115893,20115894,20115895,20115896,20115897,20115898,20115899,20115900,20115901,20115902,20115903,20115904,20115905,20115906,20115907,20115908,20115909,20115910,20115911,20115912,20115913,20115914,20115915,20115916,20115917,20115918,20115919,20115920,20115921,20115922,20115923,20115924,20115925,20115926,20115927,20115928,20115929,20115930,20115931,20115932,20115933,20115934,20115935,20115936,20115937,20115938,20115939,20115940,20115941,20115942,20115943,20115944,20115945,20115946,20115947,20115948,20115949,20115950,20115951,20115952,20115953,20115954,20115955,20115956,20115957,20115958,20115959,20115960,20115961,20115962,20115963,20115964,20115965,20115966,20115967,20115968,20115969,20115970,20115971,20115972,20115973,20115974,20115975,20115976,20115977,20115978,20115979,20115980,20115981,20115982,20115983,20115984,20115985,20115986,20115987,20115988,20115989,20115990,20115991,20115992,20115993,20115994,20115995,20115996,20115997,20115998,20029764,20029765,20029766].freeze
    FILENAME = '20221013104241_soft_delete_broken_measure_conditions_from_measure_conditions_oplog'.freeze
    OPERATION_DATE = Date.parse("2022-10-13")

    up do
      inserts = []

      MeasureCondition.where(measure_condition_sid: MEASURE_CONDITION_SIDS).each do |measure_condition|
        operation_klass = MeasureCondition::Operation

        values = measure_condition.values.slice(*operation_klass.columns).except(:oid)
        values[:filename] = FILENAME
        values[:operation_date] = OPERATION_DATE
        values[:operation] = Sequel::Plugins::Oplog::DESTROY_OPERATION
        values[:created_at] = operation_klass.dataset.current_datetime if operation_klass.columns.include?(:created_at)

        inserts << operation_klass.dataset.insert_sql(values)
      end

      MeasureCondition.db.run(inserts.join(";\n"))
    end

    down do
      MeasureCondition::Operation.where(
        measure_condition_sid: MEASURE_CONDITION_SIDS,
        filename: FILENAME,
        operation_date: OPERATION_DATE,
      ).delete
    end
  end
end
