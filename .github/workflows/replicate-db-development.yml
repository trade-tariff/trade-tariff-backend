name: Run DB Replicate Job

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches-ignore:
      - main
  workflow_dispatch:
    inputs:
      docker_tag:
        description: "Docker image tag to run"
        required: false
        default: "latest"
      ref:
        description: 'The git ref to deploy'
        required: true
        default: 'main'

env:
  AWS_REGION: eu-west-2
  IAM_ROLE_ARN: arn:aws:iam::844815912454:role/GithubActions-ECS-Deployments-Role
  CLUSTER: trade-tariff-cluster-dev
  SERVICE_NAME: db-replicate-job
  ENVIRONMENT: development
  SECRET_NAME: db-replicate-uk-worker-configuration
  ECR_URL: 382373577178.dkr.ecr.eu-west-2.amazonaws.com/tariff-backend-production

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: docker-tag
        run: echo "DOCKER_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - uses: trade-tariff/trade-tariff-tools/.github/actions/terraform-plan@main
        with:
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ inputs.ref || steps.docker-tag.outputs.DOCKER_TAG }}
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}
      - uses: trade-tariff/trade-tariff-tools/.github/actions/build-and-push@main
        with:
          ecr-url: ${{ env.ECR_URL }}
          ref: ${{ steps.docker-tag.outputs.DOCKER_TAG }}

  run-job:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Run ECS task
        run: |
          aws ecs run-task \
            --cluster "$CLUSTER" \
            --launch-type FARGATE \
            --network-configuration "awsvpcConfiguration={subnets=[trade-tariff-dev-vpc],securityGroups=[trade-tariff-ecs-security-group-dev],assignPublicIp=DISABLED}" \
            --task-definition "$SERVICE_NAME" \
            --started-by github-action
