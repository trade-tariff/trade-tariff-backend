require 'rails_helper'

RSpec.describe RulesOfOrigin::Link do
  describe 'attributes' do
    it { is_expected.to respond_to :text }
    it { is_expected.to respond_to :url }
  end

  describe '.new' do
    subject { described_class.new 'text' => 'GovUK', 'url' => 'https://www.gov.uk' }

    it { is_expected.to have_attributes text: 'GovUK' }
    it { is_expected.to have_attributes url: 'https://www.gov.uk' }
  end

  describe '.new_with_check' do
    subject(:link) { described_class.new_with_check data }

    context 'with valid' do
      let(:data) { { 'text' => 'GovUK', 'url' => 'https://www.gov.uk' } }

      it { is_expected.to be_instance_of described_class }
    end

    context 'with partially valid' do
      let(:data) { { 'text' => 'GovUK', 'url' => '' } }

      it { is_expected.to be_nil }
    end

    context 'with invalid' do
      let(:data) { { 'text' => '', 'url' => '' } }

      it { is_expected.to be_nil }
    end
  end

  describe '#id' do
    subject(:link) { first_link.id }

    let(:first_link) { build :rules_of_origin_link, id: id }

    let :second_link do
      build :rules_of_origin_link,
            id: nil,
            text: first_link.text,
            url: first_link.url
    end

    context 'when supplied' do
      let(:id) { 3 }

      it { is_expected.to be 3 }
    end

    context 'when autogenerated' do
      let(:id) { nil }

      it('is generated') { is_expected.to be_present }
      it('is content addressable') { is_expected.to eq second_link.id }
    end
  end
end
